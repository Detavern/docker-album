name: Docker Image CI for caddy-plus

on:
  push:
    branches: ["master"]
    paths:
      - "docker/caddy-plus/**"

  pull_request:
    branches: ["master"]
    paths:
      - "docker/caddy-plus/**"

  workflow_dispatch:
    inputs:
      tag:
        description: "The tag version you want to build"
        required: false
        default: "latest"
        type: string

env:
  IMAGE_NAME: caddy-plus
  DOCKERFILE_DIR: caddy-plus

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Extract version from Dockerfile
        id: version
        run: |
          LINE=$(grep -A1 '# @version' docker/${DOCKERFILE_DIR}/Dockerfile | tail -n1)
          echo "Matched line: $LINE"

          VERSION=$(echo "$LINE" | sed -E 's/^FROM [^:]+:([^ ]+).*/\1/')
          if [ -z "$VERSION" ]; then
            echo "Could not extract version from Dockerfile"
            exit 1
          fi

          echo "base_version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute Docker tags
        id: docker_tags
        run: |
          BASE_VERSION="${{ steps.version.outputs.base_version }}"
          INPUT_TAG="${{ inputs.tag }}"

          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" && "${INPUT_TAG}" != "latest" ]]; then
            TAGS="type=raw,value=${INPUT_TAG}"
          else
            TAGS="type=raw,value=latest\ntype=raw,value=${BASE_VERSION}"
          fi

          echo 'computed_tags<<EOF' >> $GITHUB_OUTPUT
          echo -e "$TAGS" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

          echo "Computed tags: $TAGS"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/detavern/${{ env.IMAGE_NAME }}
          tags: ${{ steps.docker_tags.outputs.computed_tags }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: ./docker/${{ env.DOCKERFILE_DIR }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
